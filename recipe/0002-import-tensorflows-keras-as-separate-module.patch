From 102e02834dfe755102979e59ce46e271b752df97 Mon Sep 17 00:00:00 2001
From: Jack Olivieri <jolivieri@anaconda.com>
Date: Wed, 5 Feb 2025 08:58:17 +0100
Subject: [PATCH 2/2] import tensorflows keras as separate module

---
 smote_variants/oversampling/_deago.py | 19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

diff --git a/smote_variants/oversampling/_deago.py b/smote_variants/oversampling/_deago.py
index 08a8e8c..4f85014 100755
--- a/smote_variants/oversampling/_deago.py
+++ b/smote_variants/oversampling/_deago.py
@@ -143,19 +143,20 @@ class DEAGO(OverSampling):
             tensorflow.keras.models.Model, list: the model and the callbacks
         """
         # this import is here to prevent the heavy importing of tensorflow when not needed
-        from tensorflow.keras.layers import Input, Dense, GaussianNoise # pylint: disable=wrong-import-position,no-name-in-module,import-outside-toplevel
-        from tensorflow.keras.models import Model # pylint: disable=wrong-import-position,no-name-in-module,import-outside-toplevel
-        from tensorflow.keras.callbacks import EarlyStopping # pylint: disable=wrong-import-position,no-name-in-module,import-outside-toplevel
+        from tensorflow import keras as tfkeras
+        # from tensorflow.keras.layers import Input, Dense, GaussianNoise # pylint: disable=wrong-import-position,no-name-in-module,import-outside-toplevel
+        # from tensorflow.keras.models import Model # pylint: disable=wrong-import-position,no-name-in-module,import-outside-toplevel
+        # from tensorflow.keras.callbacks import EarlyStopping # pylint: disable=wrong-import-position,no-name-in-module,import-outside-toplevel
 
         # constructing the autoencoder
-        callbacks = [EarlyStopping(monitor='val_loss', patience=2)]
+        callbacks = [tfkeras.layers.EarlyStopping(monitor='val_loss', patience=2)]
 
-        input_layer = Input(shape=(n_dim,))
-        noise = GaussianNoise(self.encoder_params['sigma'])(input_layer)
-        encoded = Dense(encoding_d, activation='relu')(noise)
-        decoded = Dense(n_dim, activation='linear')(encoded)
+        input_layer = tfkeras.layers.Input(shape=(n_dim,))
+        noise = tfkeras.layers.GaussianNoise(self.encoder_params['sigma'])(input_layer)
+        encoded = tfkeras.layers.Dense(encoding_d, activation='relu')(noise)
+        decoded = tfkeras.layers.Dense(n_dim, activation='linear')(encoded)
 
-        dae = Model(input_layer, decoded)
+        dae = tfkeras.layers.Model(input_layer, decoded)
 
         return dae, callbacks
 
-- 
2.39.5 (Apple Git-154)

